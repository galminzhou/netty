package io.netty.test.test05;import io.netty.bootstrap.Bootstrap;import io.netty.buffer.ByteBuf;import io.netty.channel.*;import io.netty.channel.nio.NioEventLoopGroup;import io.netty.channel.socket.nio.NioSocketChannel;import java.net.InetSocketAddress;public class ExampleClientBootstrap {    public static void main(String[] args) {        EventLoopGroup group = new NioEventLoopGroup(Runtime.getRuntime().availableProcessors() + 1);        // 创建一个新的 Bootstrap 来创建和连接到新的客户端管道        Bootstrap bootstrap = new Bootstrap();        try {            bootstrap.group(group) // 指定 EventLoopGroup                     .channel(NioSocketChannel.class) // 指定 Channel 实现来使用                     .handler(new SimpleChannelInboundHandler<ByteBuf>() { //设置处理器给 Channel 的事件和数据                         @Override                         protected void channelRead0(ChannelHandlerContext ctx, ByteBuf byteBuf) throws Exception {                             System.out.println("Received data");                             byteBuf.clear();                         }                     });            //连接到远端主机            ChannelFuture future = bootstrap.connect(new InetSocketAddress("127.0.0.1", 8080));            future.addListener(new ChannelFutureListener() {                @Override                public void operationComplete(ChannelFuture future) throws Exception {                    if (future.isSuccess()) {                        System.out.println("Connection established");                    } else {                        System.err.println("Connection attempt failed");                        future.cause().printStackTrace();                    }                }            });        } finally {        }    }}